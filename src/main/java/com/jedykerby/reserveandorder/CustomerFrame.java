/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jedykerby.reserveandorder;

import foodclasses.Appitizer;
import foodclasses.Dessert;
import foodclasses.Drink;
import foodclasses.MainCourse;
import foodclasses.Order;

import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import dbms.DatabaseManager;
import users.Customer;

/**
 *
 * @author YTAC
 */
public class CustomerFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerFrame
     */

    Customer customer ;
    Order orders = new Order();
    double payment;
    
    public CustomerFrame(Customer customer) {
        initComponents();
        setLocationRelativeTo(null);
        this.customer = customer;
        this.greet.setText("Hi, " + customer.getName());
        
        if (!DatabaseManager.hasReservation(customer)) {
            return;
        }

        this.renderReservation();

        this.cardPages.removeAll();
        this.cardPages.add(this.reservationPanel);
        this.cardPages.revalidate();
        this.cardPages.repaint();
        
    }
    
    public void renderOrders() {
        this.orderlistPanel.removeAll();
        
        for (MainCourse mc: orders.getMainCourses()) {
            PreOrderItemPanel preorder = new PreOrderItemPanel(this, mc);
            orderlistPanel.add(preorder);
        }
        
        for (Appitizer ap: orders.getAppitizers()) {
            PreOrderItemPanel preorder = new PreOrderItemPanel(this, ap);
            orderlistPanel.add(preorder);
        }
        
        for (Dessert ds: orders.getDesserts()) {
            PreOrderItemPanel preorder = new PreOrderItemPanel(this, ds);
            orderlistPanel.add(preorder);
        }
        
        for (Drink dr: orders.getDrinks()) {
            PreOrderItemPanel preorder = new PreOrderItemPanel(this, dr);
            orderlistPanel.add(preorder);
        }
        
        this.orderlistPanel.revalidate();
        this.orderlistPanel.repaint();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        greet = new javax.swing.JLabel();
        cardPages = new javax.swing.JPanel();
        welcome = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        makeReservationbtn = new javax.swing.JButton();
        orderPanel = new javax.swing.JPanel();
        menucards = new javax.swing.JPanel();
        maincoursesMenu = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        orderWings = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        carbonarabtn = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        salmonbtn = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        stakebtn = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        burgerbtn = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        parmesantbn = new javax.swing.JButton();
        appetizersMenu = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        nachosbtn = new javax.swing.JButton();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        friesbtn = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        mozzarellabtn = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        knotsbtn = new javax.swing.JButton();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        slidersbtn = new javax.swing.JButton();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        tempurabtn = new javax.swing.JButton();
        dessertMenu = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jButton31 = new javax.swing.JButton();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jButton32 = new javax.swing.JButton();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        jLabel114 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jButton34 = new javax.swing.JButton();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jButton35 = new javax.swing.JButton();
        jLabel122 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jButton36 = new javax.swing.JButton();
        drinksMenu = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        icedTeabtn = new javax.swing.JButton();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        lemonadebtn = new javax.swing.JButton();
        jLabel84 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        chocobtn = new javax.swing.JButton();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        milkshakebtn = new javax.swing.JButton();
        jLabel85 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        coffeebtn = new javax.swing.JButton();
        listcard = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        orderlistPanel = new javax.swing.JPanel();
        cancel = new javax.swing.JButton();
        setpreorderbtn = new javax.swing.JButton();
        resetpreoredrbtn = new javax.swing.JButton();
        apbtn = new javax.swing.JButton();
        mcbtn = new javax.swing.JButton();
        dsbtn = new javax.swing.JButton();
        ordersbtn = new javax.swing.JButton();
        drbtn = new javax.swing.JButton();
        makeReservationPanel = new javax.swing.JPanel();
        guestAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        additionalDetails = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        hours = new javax.swing.JComboBox<>();
        minutes = new javax.swing.JComboBox<>();
        timing = new javax.swing.JComboBox<>();
        orderbtn = new javax.swing.JButton();
        makeReservationbtn2 = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        detailsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOrderDetail = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        amountGuest = new javax.swing.JTextField();
        datetext = new javax.swing.JTextField();
        timetext = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        detailstext = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        changeorderbtn = new javax.swing.JButton();
        applyReservationbtn = new javax.swing.JButton();
        cancelbtn1 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        reservationPanel = new javax.swing.JPanel();
        finalDate = new javax.swing.JLabel();
        finaltime = new javax.swing.JLabel();
        finalamount = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        reservationNumber = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        finaldetails = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        recieptArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Par-Reserve");

        greet.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        greet.setText("Hi,Guest");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(greet, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(greet))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cardPages.setLayout(new java.awt.CardLayout());

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel12.setText("Welcome to Par-reserve");

        makeReservationbtn.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        makeReservationbtn.setText("Make Reservation");
        makeReservationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeReservationbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout welcomeLayout = new javax.swing.GroupLayout(welcome);
        welcome.setLayout(welcomeLayout);
        welcomeLayout.setHorizontalGroup(
            welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeLayout.createSequentialGroup()
                .addContainerGap(263, Short.MAX_VALUE)
                .addGroup(welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeLayout.createSequentialGroup()
                        .addComponent(makeReservationbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(398, 398, 398))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomeLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(289, 289, 289))))
        );
        welcomeLayout.setVerticalGroup(
            welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomeLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(makeReservationbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        cardPages.add(welcome, "card5");

        menucards.setBackground(new java.awt.Color(0, 0, 102));
        menucards.setLayout(new java.awt.CardLayout());

        maincoursesMenu.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Chimken.jpg"))); // NOI18N

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel24.setText("Chicken Wings");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setText("Tossed in Buffalo, BBQ, or Honey Garlic sauce. (Buffalo flavor served with ranch)");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel26.setText("Price: PHP400");

        orderWings.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        orderWings.setText("Order");
        orderWings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderWingsActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel28.setText("Italian Carbonara");

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Carbonara.jpg"))); // NOI18N

        jLabel30.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel30.setText("Made with Guanciale, Parmesano Reggiano, Egg Yolks, Salt, and Black Pepper.");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel31.setText("Price: PHP350");

        carbonarabtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        carbonarabtn.setText("Order");
        carbonarabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carbonarabtnActionPerformed(evt);
            }
        });

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Pan-seared-salmon.jpg"))); // NOI18N

        jLabel33.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel33.setText("Pan-Seared Salmon");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel34.setText("Served with Lemon Butter sauce and Steamed Vegetable.");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel35.setText("Price: PHP450");

        salmonbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        salmonbtn.setText("Order");
        salmonbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salmonbtnActionPerformed(evt);
            }
        });

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Steak.jpg"))); // NOI18N

        jLabel37.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel37.setText("Grilled Ribeye Steak");

        jLabel38.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel38.setText("Served with garlic butter and a side of mashed potatoes.");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel39.setText("Price: PHP700");

        stakebtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        stakebtn.setText("Order");
        stakebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stakebtnActionPerformed(evt);
            }
        });

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Burgir.jpg"))); // NOI18N

        jLabel41.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel41.setText("Price: PHP250");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel42.setText("Juicy beef patty with cheddar, lettuce, tomato, and pickles. Served with Fries.");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel43.setText("Pub Style Cheeseburger");

        burgerbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        burgerbtn.setText("Order");
        burgerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                burgerbtnActionPerformed(evt);
            }
        });

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ChimkenParmesan.jpg"))); // NOI18N

        jLabel45.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel45.setText("Price: PHP250");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel46.setText("Breaded chicken breast topped with Marinara and Melted Mozzarella, served with Spaghetti.");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel47.setText("Chicken Parmesan");

        parmesantbn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        parmesantbn.setText("Order");
        parmesantbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parmesantbnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel32))
                            .addComponent(jLabel36))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(jLabel37)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel42))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel35)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(salmonbtn))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel39)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(stakebtn))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel41)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(burgerbtn))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(orderWings)
                                            .addComponent(carbonarabtn))))
                                .addGap(121, 121, 121))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26))
                                .addGap(0, 162, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(379, 379, 379)
                                .addComponent(jLabel27)
                                .addContainerGap(180, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 162, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel44)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(361, 361, 361)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel47)
                                    .addComponent(jLabel46)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel45)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(parmesantbn)
                                        .addGap(19, 19, 19)))))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addGap(78, 78, 78)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(orderWings)))
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel27))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel31)
                                    .addComponent(carbonarabtn))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel34)
                        .addGap(75, 75, 75)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(salmonbtn)))
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel38)
                        .addGap(81, 81, 81)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(stakebtn)))
                    .addComponent(jLabel36))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel42)
                        .addGap(72, 72, 72)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(burgerbtn)))
                    .addComponent(jLabel40))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel47)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel46)
                        .addGap(84, 84, 84)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(parmesantbn)))
                    .addComponent(jLabel44))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        maincoursesMenu.setViewportView(jPanel4);

        menucards.add(maincoursesMenu, "card2");

        appetizersMenu.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Nachos.jpg"))); // NOI18N

        jLabel50.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel50.setText("Loaded with Ground Beef, Diced Tomato, Red Onion, Sour Cream, Cheese, ");

        jLabel51.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel51.setText("Loaded Nachos");

        jLabel52.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel52.setText("Price: PHP150");

        nachosbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nachosbtn.setText("Order");
        nachosbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nachosbtnActionPerformed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel53.setText("Jalapeno, served with Guacamole.");

        jLabel54.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel54.setText("Price: PHP100");

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/JustFries.jpg"))); // NOI18N

        jLabel56.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel56.setText("Just Fries.");

        jLabel57.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel57.setText("Classic Fries");

        friesbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        friesbtn.setText("Order");
        friesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friesbtnActionPerformed(evt);
            }
        });

        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MozzarellaSticks.jpg"))); // NOI18N

        jLabel59.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel59.setText("Price: PHP150");

        jLabel60.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel60.setText("Breaded and fried cheese sticks with marinara dipping sauce.");

        jLabel61.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel61.setText("Mozzarella Sticks");

        mozzarellabtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mozzarellabtn.setText("Order");
        mozzarellabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mozzarellabtnActionPerformed(evt);
            }
        });

        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/GarlicKnots.jpg"))); // NOI18N

        jLabel63.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel63.setText("Garlic Knots ");

        jLabel64.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel64.setText("Soft dough knots brushed with garlic butter and served with marinara.");

        jLabel65.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel65.setText("Price: PHP180");

        knotsbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        knotsbtn.setText("Order");
        knotsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knotsbtnActionPerformed(evt);
            }
        });

        jLabel66.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MiniSliders.jpg"))); // NOI18N

        jLabel67.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel67.setText("Mini Sliders");

        jLabel68.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel68.setText("Bite-sized burgers with cheese, lettuce, and a special sauce.");

        jLabel69.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel69.setText("Price: PHP200");

        slidersbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        slidersbtn.setText("Order");
        slidersbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slidersbtnActionPerformed(evt);
            }
        });

        jLabel70.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tempura-Shrimp.jpg"))); // NOI18N

        jLabel71.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel71.setText("Price: PHP150");

        jLabel72.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel72.setText("Lightly battered shrimp served with soy-based dipping sauce.");

        jLabel73.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel73.setText("Crispy Tempura");

        tempurabtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tempurabtn.setText("Order");
        tempurabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempurabtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel52, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel54, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel65, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel69, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 6, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tempurabtn)
                            .addComponent(slidersbtn)
                            .addComponent(knotsbtn)
                            .addComponent(friesbtn)
                            .addComponent(mozzarellabtn)
                            .addComponent(nachosbtn))
                        .addGap(132, 132, 132))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61)
                            .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(179, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addGap(55, 55, 55)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel51)
                                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel53)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel55)
                                .addGap(55, 55, 55)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel57)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel62)
                                .addGap(55, 55, 55)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel63)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel66)
                                .addGap(55, 55, 55)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel67)
                                    .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel70)
                                .addGap(41, 41, 41)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel73))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel53)
                        .addGap(56, 56, 56)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(nachosbtn)))
                    .addComponent(jLabel49))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel56)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel54)
                            .addComponent(friesbtn)))
                    .addComponent(jLabel55))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel61)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel60)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel59)
                            .addComponent(mozzarellabtn)))
                    .addComponent(jLabel58))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel63)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel64)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(knotsbtn)))
                    .addComponent(jLabel62))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel68)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel69)
                            .addComponent(slidersbtn)))
                    .addComponent(jLabel66))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel73)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel72)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(tempurabtn)))
                    .addComponent(jLabel70))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        appetizersMenu.setViewportView(jPanel5);

        menucards.add(appetizersMenu, "card3");

        jLabel93.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/classiccheesecake.jpg"))); // NOI18N

        jLabel103.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel103.setText("Cheese Cake");

        jLabel104.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel104.setText("Classic Cheesecake, served with Whipped Cream.");

        jLabel105.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel105.setText("Price: PHP 150");

        jButton31.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton31.setText("Order");

        jLabel106.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Tiramisu.jpg"))); // NOI18N

        jLabel107.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel107.setText("Price: PHP 170");

        jLabel108.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel108.setText("Layers of coffee-soaked ladyfingers and Mascarpone cream, dusted with cocoa. ");

        jLabel109.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel109.setText("Tiramisu");

        jButton32.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton32.setText("Order");

        jLabel110.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LavaCake.jpg"))); // NOI18N

        jLabel111.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel111.setText("Warm chocolate cake with a gooey center, served with vanilla ice cream. ");

        jLabel112.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel112.setText("Chocolate Lava Cake");

        jLabel113.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel113.setText("Price: PHP 150");

        jButton33.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton33.setText("Order");

        jLabel114.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CarrotCake.jpg"))); // NOI18N

        jLabel115.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel115.setText("Price: PHP 100");

        jLabel116.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel116.setText("Moist spiced cake with cream cheese frosting.");

        jLabel117.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel117.setText("Carrot Cake");

        jButton34.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton34.setText("Order");

        jLabel118.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel118.setText("Price: PHP 100");

        jLabel119.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel119.setText("With toppings like hot fudge, sprinkles, and whipped cream.");

        jLabel120.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel120.setText("Ice Cream Sundae");

        jLabel121.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Sundae.jpg"))); // NOI18N

        jButton35.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton35.setText("Order");

        jLabel122.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel122.setText("Churros ");

        jLabel123.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel123.setText("Fried dough sticks coated in cinnamon sugar, served with chocolate ");

        jLabel124.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel124.setText("Price: PHP 100");

        jLabel125.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Churros.jpg"))); // NOI18N

        jButton36.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton36.setText("Order");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel93)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel106)
                                .addGap(9, 9, 9)))
                        .addGap(185, 185, 185)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel105)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton31))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel109)
                                    .addComponent(jLabel103)
                                    .addComponent(jLabel104)
                                    .addComponent(jLabel108))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel114)
                            .addComponent(jLabel110))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel113)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton33))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel107)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton32))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel111)
                                            .addComponent(jLabel112))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel115)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton34))
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel120)
                                            .addComponent(jLabel116)
                                            .addComponent(jLabel117)
                                            .addComponent(jLabel119)
                                            .addComponent(jLabel118))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel125)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(353, 353, 353)
                                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel122)
                                            .addComponent(jLabel123)
                                            .addComponent(jLabel124))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addComponent(jButton36))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel121)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton35)))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel103)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel104)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel105)
                            .addComponent(jButton31)))
                    .addComponent(jLabel93))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel109)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel108)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel107)
                            .addComponent(jButton32)))
                    .addComponent(jLabel106))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel112)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel111)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel113)
                            .addComponent(jButton33)))
                    .addComponent(jLabel110))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel117)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel116)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel115)
                            .addComponent(jButton34)))
                    .addComponent(jLabel114))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel121)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel120)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel119)
                        .addGap(118, 118, 118)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton35)
                            .addComponent(jLabel118))))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel125)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel122)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel123)
                        .addGap(115, 115, 115)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel124)
                            .addComponent(jButton36))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        dessertMenu.setViewportView(jPanel7);

        menucards.add(dessertMenu, "card5");

        jLabel74.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lemon-iced-tea.jpg"))); // NOI18N

        jLabel75.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel75.setText("12oz - PHP 30");

        jLabel76.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel76.setText("Traditional Black Tea or Green Tea.");

        jLabel77.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel77.setText("Iced Tea");

        icedTeabtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        icedTeabtn.setText("Order");
        icedTeabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icedTeabtnActionPerformed(evt);
            }
        });

        jLabel78.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel78.setText("16oz - PHP 50");

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Lemonade.jpg"))); // NOI18N

        jLabel80.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel80.setText("Lemonade");

        jLabel81.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel81.setText("Classic Lemonade.");

        jLabel82.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel82.setText("12oz - PHP 30");

        jLabel83.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel83.setText("16oz - PHP 50");

        lemonadebtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lemonadebtn.setText("Order");
        lemonadebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lemonadebtnActionPerformed(evt);
            }
        });

        jLabel84.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ColdChoco.jpg"))); // NOI18N

        jLabel86.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel86.setText("Hot 6oz - PHP 80");

        jLabel87.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel87.setText("Tablea based Iced or Hot Chocolate.");

        jLabel88.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel88.setText("Iced or Hot Chocolate");

        chocobtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        chocobtn.setText("Order");
        chocobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chocobtnActionPerformed(evt);
            }
        });

        jLabel89.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel89.setText("Hot 8oz - PHP 100");

        jLabel90.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel90.setText("Cold 12oz - PHP 80");

        jLabel91.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel91.setText("Cold 16oz - PHP 100");

        milkshakebtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        milkshakebtn.setText("Order");
        milkshakebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                milkshakebtnActionPerformed(evt);
            }
        });

        jLabel85.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Milkshake.jpg"))); // NOI18N

        jLabel92.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel92.setText("16oz - PHP 120");

        jLabel94.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel94.setText("Options varies from Vanilla");

        jLabel95.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel95.setText("Milkshake");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel48.setText("Chocolate and Strawberry.");

        jLabel96.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Coffee.jpg"))); // NOI18N

        jLabel97.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel97.setText("Iced or Hot Coffee");

        jLabel98.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel98.setText("Esspresso-Based Iced and Hot Latte");

        jLabel99.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel99.setText("Hot 6oz - PHP 80");

        jLabel100.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel100.setText("Hot 8oz - PHP 100");

        jLabel101.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel101.setText("Cold 12oz - PHP 80");

        jLabel102.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel102.setText("Cold 16oz - PHP 100");

        coffeebtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        coffeebtn.setText("Order");
        coffeebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coffeebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel74)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel91)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(chocobtn))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel84)
                                    .addGap(28, 28, 28)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel89)
                                        .addComponent(jLabel86)
                                        .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel88)
                                        .addComponent(jLabel78)
                                        .addComponent(jLabel75)
                                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel77)
                                        .addComponent(jLabel90))
                                    .addGap(15, 15, 15))
                                .addComponent(icedTeabtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel79)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lemonadebtn)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel83)
                                        .addComponent(jLabel80)
                                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel82))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel85)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel95)
                                        .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel92, javax.swing.GroupLayout.Alignment.LEADING)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(milkshakebtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel96)
                                .addGap(28, 28, 28)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel100)
                                    .addComponent(jLabel99)
                                    .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel97)
                                    .addComponent(jLabel101)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel102)
                                        .addGap(29, 29, 29)
                                        .addComponent(coffeebtn)))
                                .addGap(183, 183, 183)))))
                .addGap(72, 72, 72))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel80)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel81)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel82)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel83))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lemonadebtn))))
                        .addComponent(jLabel79))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel77)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel76)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel75)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel78))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(icedTeabtn))))
                        .addComponent(jLabel74)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel88)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel87)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel86)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel89)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel90)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(chocobtn))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel91)
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addComponent(jLabel84))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel95)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel94)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel48)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel92)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(milkshakebtn))
                        .addComponent(jLabel85)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel96)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel97)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel98)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel99)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel100)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel101)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel102))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(coffeebtn)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        drinksMenu.setViewportView(jPanel6);

        menucards.add(drinksMenu, "card4");

        orderlistPanel.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane.setViewportView(orderlistPanel);

        cancel.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        setpreorderbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        setpreorderbtn.setText("Set pre-order");
        setpreorderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setpreorderbtnActionPerformed(evt);
            }
        });

        resetpreoredrbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        resetpreoredrbtn.setText("Reset");
        resetpreoredrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetpreoredrbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listcardLayout = new javax.swing.GroupLayout(listcard);
        listcard.setLayout(listcardLayout);
        listcardLayout.setHorizontalGroup(
            listcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listcardLayout.createSequentialGroup()
                .addContainerGap(722, Short.MAX_VALUE)
                .addComponent(resetpreoredrbtn)
                .addGap(18, 18, 18)
                .addComponent(setpreorderbtn)
                .addGap(18, 18, 18)
                .addComponent(cancel)
                .addGap(22, 22, 22))
        );
        listcardLayout.setVerticalGroup(
            listcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listcardLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(listcardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(setpreorderbtn)
                    .addComponent(resetpreoredrbtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE))
        );

        menucards.add(listcard, "card6");

        apbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        apbtn.setText("Appetizers");
        apbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apbtnActionPerformed(evt);
            }
        });

        mcbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        mcbtn.setText("Main Courses");
        mcbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mcbtnActionPerformed(evt);
            }
        });

        dsbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        dsbtn.setText("Desserts");
        dsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsbtnActionPerformed(evt);
            }
        });

        ordersbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        ordersbtn.setText("Orders");
        ordersbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersbtnActionPerformed(evt);
            }
        });

        drbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        drbtn.setText("Drinks");
        drbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout orderPanelLayout = new javax.swing.GroupLayout(orderPanel);
        orderPanel.setLayout(orderPanelLayout);
        orderPanelLayout.setHorizontalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menucards, javax.swing.GroupLayout.DEFAULT_SIZE, 1037, Short.MAX_VALUE)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(mcbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(apbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dsbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(drbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ordersbtn)
                .addGap(35, 35, 35))
        );
        orderPanelLayout.setVerticalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apbtn)
                    .addComponent(dsbtn)
                    .addComponent(ordersbtn)
                    .addComponent(drbtn)
                    .addComponent(mcbtn))
                .addGap(24, 24, 24)
                .addComponent(menucards, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cardPages.add(orderPanel, "card4");

        makeReservationPanel.setBackground(new java.awt.Color(255, 255, 255));

        guestAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel3.setText("Amount of Guest:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel4.setText("Additional Details (Optional):");

        additionalDetails.setColumns(20);
        additionalDetails.setLineWrap(true);
        additionalDetails.setRows(5);
        additionalDetails.setWrapStyleWord(true);
        jScrollPane1.setViewportView(additionalDetails);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel5.setText("Date:");

        date.setToolTipText("Select a date");

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel6.setText("Time:");

        hours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", " " }));

        minutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "15", "30", "45" }));

        timing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));

        orderbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        orderbtn.setText("Order");
        orderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderbtnActionPerformed(evt);
            }
        });

        makeReservationbtn2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        makeReservationbtn2.setText("Make Reservation");
        makeReservationbtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeReservationbtn2ActionPerformed(evt);
            }
        });

        cancelbtn.setBackground(new java.awt.Color(255, 153, 102));
        cancelbtn.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        cancelbtn.setText("Cancel");
        cancelbtn.setBorder(null);
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        jLabel21.setText("Make Reservation");

        javax.swing.GroupLayout makeReservationPanelLayout = new javax.swing.GroupLayout(makeReservationPanel);
        makeReservationPanel.setLayout(makeReservationPanelLayout);
        makeReservationPanelLayout.setHorizontalGroup(
            makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(makeReservationPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeReservationPanelLayout.createSequentialGroup()
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(makeReservationPanelLayout.createSequentialGroup()
                                .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(timing, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(guestAmount, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(569, 569, 569))
                    .addGroup(makeReservationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(makeReservationPanelLayout.createSequentialGroup()
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(makeReservationbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54))))
        );
        makeReservationPanelLayout.setVerticalGroup(
            makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, makeReservationPanelLayout.createSequentialGroup()
                .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(makeReservationPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(makeReservationbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(orderbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(makeReservationPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guestAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(makeReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timing, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        cardPages.add(makeReservationPanel, "card3");

        tableOrderDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food/Drink", "Size", "Amount", "Price", "Food Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOrderDetail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tableOrderDetail.setFocusable(false);
        jScrollPane2.setViewportView(tableOrderDetail);
        if (tableOrderDetail.getColumnModel().getColumnCount() > 0) {
            tableOrderDetail.getColumnModel().getColumn(0).setResizable(false);
            tableOrderDetail.getColumnModel().getColumn(1).setResizable(false);
            tableOrderDetail.getColumnModel().getColumn(2).setResizable(false);
            tableOrderDetail.getColumnModel().getColumn(3).setResizable(false);
            tableOrderDetail.getColumnModel().getColumn(4).setResizable(false);
        }

        total.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        total.setText("Total: [Price]");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Reservation Details");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Reservation for:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Date:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Time:");

        amountGuest.setEditable(false);
        amountGuest.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        amountGuest.setFocusable(false);

        datetext.setEditable(false);
        datetext.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        datetext.setFocusable(false);

        timetext.setEditable(false);
        timetext.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        timetext.setFocusable(false);

        detailstext.setEditable(false);
        detailstext.setColumns(20);
        detailstext.setRows(5);
        detailstext.setFocusable(false);
        jScrollPane3.setViewportView(detailstext);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Additional Details:");

        changeorderbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        changeorderbtn.setText("Change Order");
        changeorderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeorderbtnActionPerformed(evt);
            }
        });

        applyReservationbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        applyReservationbtn.setText("Apply Reservation");
        applyReservationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyReservationbtnActionPerformed(evt);
            }
        });

        cancelbtn1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancelbtn1.setText("Cancel");
        cancelbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtn1ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel22.setText("Pre-orders");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(409, 409, 409))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel22)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(amountGuest)
                                    .addComponent(datetext)
                                    .addComponent(timetext)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(changeorderbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(applyReservationbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelbtn1)))
                        .addGap(33, 33, 33))))
        );
        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(24, 24, 24)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(amountGuest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(datetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(timetext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeorderbtn)
                            .addComponent(applyReservationbtn)
                            .addComponent(cancelbtn1)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        cardPages.add(detailsPanel, "card5");

        finalDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        finalDate.setText("Date:");

        finaltime.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        finaltime.setText("Time:");

        finalamount.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        finalamount.setText("Reservation for:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Your additional details:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Reservation Number:");

        reservationNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        reservationNumber.setText("--NUMBER--");

        finaldetails.setEditable(false);
        finaldetails.setColumns(20);
        finaldetails.setLineWrap(true);
        finaldetails.setRows(5);
        finaldetails.setWrapStyleWord(true);
        finaldetails.setFocusable(false);
        jScrollPane5.setViewportView(finaldetails);

        jButton13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton13.setText("Cancel Reservation");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel20.setText("Orders");

        recieptArea.setEditable(false);
        recieptArea.setColumns(20);
        recieptArea.setLineWrap(true);
        recieptArea.setRows(5);
        recieptArea.setWrapStyleWord(true);
        recieptArea.setFocusable(false);
        jScrollPane4.setViewportView(recieptArea);

        javax.swing.GroupLayout reservationPanelLayout = new javax.swing.GroupLayout(reservationPanel);
        reservationPanel.setLayout(reservationPanelLayout);
        reservationPanelLayout.setHorizontalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(reservationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(reservationPanelLayout.createSequentialGroup()
                                .addComponent(finalDate, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(finaltime, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17)
                            .addComponent(finalamount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 57, Short.MAX_VALUE))
                    .addComponent(jScrollPane5)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(102, 102, 102))
        );
        reservationPanelLayout.setVerticalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(finalDate)
                            .addComponent(finaltime))
                        .addGap(18, 18, 18)
                        .addComponent(finalamount)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(reservationNumber)
                    .addComponent(jButton13))
                .addGap(60, 60, 60))
        );

        cardPages.add(reservationPanel, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cardPages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardPages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void icedTeabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icedTeabtnActionPerformed
        
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/lemon-iced-tea.jpg"));
        Drink mc = new Drink(icon ,"Iced Tea", 0);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            int size = 0;
                    
            int result = JOptionPane.showOptionDialog(
                this, 
                "", 
                "Custom Option Dialog", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                new String[]{"12oz", "16oz"}, 
                "Confirm");
            
            switch (result) {
                case 0 -> {
                    size = 12;
                    mc.setPrice(30);
                }
                case 1 -> {
                    size = 16;
                    mc.setPrice(50);
                }
                case -1 -> {
                    return;
                }
            }
            
            mc.setSize(size);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
        
    }//GEN-LAST:event_icedTeabtnActionPerformed

    private void lemonadebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lemonadebtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Lemonade.jpg"));
        Drink mc = new Drink(icon ,"Lemonade", 0);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            int size = 0;
                    
            int result = JOptionPane.showOptionDialog(
                this, 
                "", 
                "Custom Option Dialog", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                new String[]{"12oz", "16oz"}, 
                "Confirm");
            
            switch (result) {
                case 0 -> {
                    size = 12;
                    mc.setPrice(30);
                }
                case 1 -> {
                    size = 16;
                    mc.setPrice(50);
                }
                case -1 -> {
                    return;
                }
            }
            
            mc.setSize(size);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_lemonadebtnActionPerformed

    private void chocobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chocobtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/HotChoco.jpg"));
        Drink mc = new Drink(icon ,"Iced or Hot Chocolate", 0);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            int size = 0;
                    
            int result = JOptionPane.showOptionDialog(
                this, 
                "", 
                "Custom Option Dialog", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                new String[]{"(Hot) 6oz", "(Hot) 8oz", "(Cold) 12oz", "(Cold) 16oz"}, 
                "Confirm");
            
            switch (result) {
                case 0 -> {
                    size = 6;
                    mc.setPrice(80);
                    mc.setVariant("HOT");
                }
                case 1 -> {
                    size = 8;
                    mc.setPrice(100);
                    mc.setVariant("HOT");
                }
                case 2 -> {
                    size = 12;
                    mc.setPrice(80);
                    mc.setVariant("COLD");
                }
                case 3 -> {
                    size = 16;
                    mc.setPrice(100);
                    mc.setVariant("COLD");
                }
                case -1 -> {
                    return;
                }
            }
            
            mc.setSize(size);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_chocobtnActionPerformed

    private void milkshakebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_milkshakebtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Milkshake.jpg"));
        Drink mc = new Drink(icon ,"Milkshakes", 120);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            mc.setSize(16);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_milkshakebtnActionPerformed

    private void coffeebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coffeebtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Coffee.jpg"));
        Drink mc = new Drink(icon ,"Iced or Hot Coffee", 0);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            int size = 0;
                    
            int result = JOptionPane.showOptionDialog(
                this, 
                "", 
                "Custom Option Dialog", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.QUESTION_MESSAGE, 
                null, 
                new String[]{"(Hot) 6oz", "(Hot) 8oz", "(Cold) 12oz", "(Cold) 16oz"}, 
                "Confirm");
            
            switch (result) {
                case 0 -> {
                    size = 6;
                    mc.setPrice(80);
                    mc.setVariant("HOT");
                }
                case 1 -> {
                    size = 8;
                    mc.setPrice(100);
                    mc.setVariant("HOT");
                }
                case 2 -> {
                    size = 12;
                    mc.setPrice(80);
                    mc.setVariant("COLD");
                }
                case 3 -> {
                    size = 16;
                    mc.setPrice(100);
                    mc.setVariant("COLD");
                }
                case -1 -> {
                    return;
                }
            }
            
            mc.setSize(size);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_coffeebtnActionPerformed

    private void makeReservationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeReservationbtnActionPerformed
        
        this.cardPages.removeAll();
        this.cardPages.add(makeReservationPanel);
        this.cardPages.repaint();
        this.cardPages.revalidate();

    }//GEN-LAST:event_makeReservationbtnActionPerformed

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        
        this.guestAmount.setText("");
        this.date.setDate(null);
        this.hours.setSelectedIndex(0);
        this.minutes.setSelectedIndex(0);
        this.timing.setSelectedIndex(0);
        this.additionalDetails.setText("");

        this.cardPages.removeAll();
        this.cardPages.add(welcome);
        this.cardPages.repaint();
        this.cardPages.revalidate();

    }//GEN-LAST:event_cancelbtnActionPerformed

    private void orderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderbtnActionPerformed
        int amountOfGuest = 0;

        try {
            amountOfGuest = Integer.parseInt(this.guestAmount.getText());
            if (amountOfGuest > 15) {
                JOptionPane.showMessageDialog(this, "The maximum amount of guests is 15", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (this.date.getCalendar() == null) {
            JOptionPane.showMessageDialog(this, "Please select a date", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String time = this.hours.getSelectedItem().toString() + ":" + this.minutes.getSelectedItem().toString() + " " + this.timing.getSelectedItem().toString();

        String date = new SimpleDateFormat("MMM d, yyyy").format(this.date.getDate());

        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("MMM d, yyyy");
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("h:mm a");
        
        LocalDate selectedDate = LocalDate.parse(date, dateTimeFormatter);
        LocalTime selectedTime = LocalTime.parse(time, timeFormatter);

        if (selectedDate.isBefore(LocalDate.now())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid date", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedDate.isEqual(LocalDate.now())) {
            
            if (selectedTime.isBefore(LocalTime.now())) {
                JOptionPane.showMessageDialog(this, "Please enter a valid time", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (selectedTime.isBefore(LocalTime.now().plusMinutes(20))) {
                JOptionPane.showMessageDialog(this, "Sorry, we do not allow reservations less than 20 minutes from now", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        }

        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to make a reservation?", "Confirmation", JOptionPane.YES_NO_OPTION);

        if (dialogResult != JOptionPane.YES_OPTION) {
            return;
        }

        this.cardPages.removeAll();
        this.cardPages.add(orderPanel);
        this.cardPages.repaint();
        this.cardPages.revalidate();

    }//GEN-LAST:event_orderbtnActionPerformed

    private void makeReservationbtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeReservationbtn2ActionPerformed
        int amountOfGuest = 0;

        try {
            amountOfGuest = Integer.parseInt(this.guestAmount.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);

            return;
        }

        if (amountOfGuest > 15) {
            
            JOptionPane.showMessageDialog(
                this, 
                "The maximum amount of guests is 15", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);

            return;
        }
        
        if (this.date.getCalendar() == null) {
            JOptionPane.showMessageDialog(
                    this,
                    "Please select a date",
                    "Error",
                    JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        String time = this.hours.getSelectedItem().toString() + ":" + this.minutes.getSelectedItem().toString() + " " + this.timing.getSelectedItem().toString();

        String date = new SimpleDateFormat("MMM d, yyyy").format(this.date.getDate());

        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("MMM d, yyyy");
        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("h:mm a");
        
        LocalDate selectedDate = LocalDate.parse(date, dateTimeFormatter);
        LocalTime selectedTime = LocalTime.parse(time, timeFormatter);

        if (selectedDate.isBefore(LocalDate.now())) {
            JOptionPane.showMessageDialog(this, "Please enter a valid date", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedDate.isEqual(LocalDate.now())) {
            
            if (selectedTime.isBefore(LocalTime.now())) {
                JOptionPane.showMessageDialog(this, "Please enter a valid time", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (selectedTime.isBefore(LocalTime.now().plusMinutes(20))) {
                JOptionPane.showMessageDialog(this, "Sorry, we do not allow reservations less than 20 minutes from now", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        }

        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to make a reservation?", "Confirmation", JOptionPane.YES_NO_OPTION);

        if (dialogResult != JOptionPane.YES_OPTION) {
            return;
        }
        
        SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
        
        String receipt = """
                         ORDERS
                         =======================================
                         <--NO-ORDERS-->
                         =======================================
                         """;
                        
        DatabaseManager.addReservation(
                customer,
                receipt,
                this.additionalDetails.getText(),
                amountOfGuest,
                formatter.format(this.date.getDate()),
                time,
                0
        );
        
        this.renderReservation();
        
        this.cardPages.removeAll();
        this.cardPages.add(reservationPanel);
        this.cardPages.repaint();
        this.cardPages.revalidate();

    }//GEN-LAST:event_makeReservationbtn2ActionPerformed

    private void orderWingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderWingsActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Chimken.jpg"));
        MainCourse mc = new MainCourse(icon ,"Chicken Wings", 400);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_orderWingsActionPerformed

    private void ordersbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersbtnActionPerformed
        this.menucards.removeAll();
        this.menucards.add(listcard);
        this.menucards.revalidate();
        this.menucards.repaint();
    }//GEN-LAST:event_ordersbtnActionPerformed

    private void carbonarabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carbonarabtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Carbonara.jpg"));
        MainCourse mc = new MainCourse(icon ,"Italian Carbonara", 350);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_carbonarabtnActionPerformed

    private void salmonbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salmonbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Pan-seared-salmon.jpg"));
        MainCourse mc = new MainCourse(icon ,"Pan-Seared Salmon ", 450);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();    
    }//GEN-LAST:event_salmonbtnActionPerformed

    private void stakebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stakebtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Steak.jpg"));
        MainCourse mc = new MainCourse(icon ,"Grilled Ribeye Steak", 700);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders(); 
    }//GEN-LAST:event_stakebtnActionPerformed

    private void burgerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_burgerbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Burgir.jpg"));
        MainCourse mc = new MainCourse(icon ,"Pub Style Cheeseburger", 250);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_burgerbtnActionPerformed

    private void parmesantbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parmesantbnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/ChimkenParmesan.jpg"));
        MainCourse mc = new MainCourse(icon ,"Chicken Parmesan", 300);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+mc.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(mc, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_parmesantbnActionPerformed

    private void nachosbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nachosbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Nachos.jpg"));
        Appitizer ap = new Appitizer(icon ,"Loaded Nachos ", 150);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_nachosbtnActionPerformed

    private void friesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friesbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/JustFries.jpg"));
        Appitizer ap = new Appitizer(icon ,"Classic Fries", 100);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_friesbtnActionPerformed

    private void mozzarellabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mozzarellabtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/MozzarellaSticks.jpg"));
        Appitizer ap = new Appitizer(icon ,"Mozzarella Sticks", 150);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_mozzarellabtnActionPerformed

    private void knotsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knotsbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/GarlicKnots.jpg"));
        Appitizer ap = new Appitizer(icon ,"Garlic Knots", 180);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_knotsbtnActionPerformed

    private void slidersbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slidersbtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/MiniSliders .jpg"));
        Appitizer ap = new Appitizer(icon ,"Mini Sliders", 200);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_slidersbtnActionPerformed

    private void tempurabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempurabtnActionPerformed
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/Tempura-Shirmp.jpg"));
        Appitizer ap = new Appitizer(icon ,"Crispy Tempura", 150);

        String amount = JOptionPane.showInputDialog(
            this, 
            "Enter the amount of "+ap.getName()+" you want to order", 
            "Order", 
            JOptionPane.QUESTION_MESSAGE);
        
        if (amount == null) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            int amountOfWings = Integer.parseInt(amount);
            this.orders.add(ap, amountOfWings);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this, 
                "Please enter a valid number", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        this.renderOrders();
    }//GEN-LAST:event_tempurabtnActionPerformed

    private void mcbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mcbtnActionPerformed
        this.menucards.removeAll();
        this.menucards.add(this.maincoursesMenu);
        this.menucards.revalidate();
        this.menucards.repaint();
    }//GEN-LAST:event_mcbtnActionPerformed

    private void apbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apbtnActionPerformed
        this.menucards.removeAll();
        this.menucards.add(this.appetizersMenu);
        this.menucards.revalidate();
        this.menucards.repaint();
    }//GEN-LAST:event_apbtnActionPerformed

    private void dsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsbtnActionPerformed
        this.menucards.removeAll();
        this.menucards.add(this.dessertMenu);
        this.menucards.revalidate();
        this.menucards.repaint();
    }//GEN-LAST:event_dsbtnActionPerformed

    private void drbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drbtnActionPerformed
        this.menucards.removeAll();
        this.menucards.add(this.drinksMenu);
        this.menucards.revalidate();
        this.menucards.repaint();
    }//GEN-LAST:event_drbtnActionPerformed
    
    private void resetpreoredrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetpreoredrbtnActionPerformed
        this.orders.removeAll();
        this.renderOrders();
    }//GEN-LAST:event_resetpreoredrbtnActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.orders.removeAll();
        this.renderOrders();
        
        this.cardPages.removeAll();
        this.cardPages.add(makeReservationPanel);
        this.cardPages.revalidate();
        this.cardPages.repaint();
    }//GEN-LAST:event_cancelActionPerformed

    private void setpreorderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setpreorderbtnActionPerformed
        SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
        
        this.amountGuest.setText(this.guestAmount.getText());
        this.datetext.setText(formatter.format(date.getDate()));
        this.timetext.setText(
                this.hours.getSelectedItem().toString() + ":" + 
                this.minutes.getSelectedItem().toString() + " " +
                this.timing.getSelectedItem().toString());
        this.detailstext.setText(this.additionalDetails.getText());
        
        DefaultTableModel orderDetails = (DefaultTableModel) this.tableOrderDetail.getModel();
        
        for (MainCourse mc: this.orders.getMainCourses()) {
            Object[] row = {
                mc.getName(),
                "N/A",
                mc.getQuantity(),
                mc.getPrice(),
                "Main Course"
            };
            
            orderDetails.addRow(row);
        }
        
        for (Appitizer ap: this.orders.getAppitizers()) {
            Object[] row = {
                ap.getName(),
                "N/A",
                ap.getQuantity(),
                ap.getPrice(),
                "Appitizer"
            };
            
            orderDetails.addRow(row);
        }
        
        for (Dessert ds: this.orders.getDesserts()) {
            Object[] row = {
                ds.getName(),
                "N/A",
                ds.getQuantity(),
                ds.getPrice(),
                "Dessert"
            };
            
            orderDetails.addRow(row);
        }
        
        for (Drink dr: this.orders.getDrinks()) {
            Object[] row = {
                dr.getName(),
                String.valueOf(dr.getSize()),
                dr.getQuantity(),
                dr.getPrice(),
                "Drink"
            };
            
            orderDetails.addRow(row);
        }
        
        this.total.setText("Total: PHP"+orders.getTotal());
        
        this.cardPages.removeAll();
        this.cardPages.add(detailsPanel);
        this.cardPages.revalidate();
        this.cardPages.repaint();
    }//GEN-LAST:event_setpreorderbtnActionPerformed

    private void changeorderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeorderbtnActionPerformed
        this.cardPages.removeAll();
        this.cardPages.add(orderPanel);
        this.cardPages.revalidate();
        this.cardPages.repaint();
    }//GEN-LAST:event_changeorderbtnActionPerformed

    private void applyReservationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyReservationbtnActionPerformed
        double n = 0, change;
        SimpleDateFormat formatter = new SimpleDateFormat("MMM d, yyyy");
        
        String receipt =    """
                            ORDER
                            =======================================""";
        
        if (this.orders.getTotal() > 0) {
            
            String payment = JOptionPane.showInputDialog(
                    this,
                    "How much would you like to pay?",
                    "Payment",
                    JOptionPane.QUESTION_MESSAGE
            );
            
            try  {
                n = Double.parseDouble(payment);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(
                        this, 
                        "Invalid input",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }
            
            if (orders.getTotal() > n) {
                JOptionPane.showMessageDialog(
                        this, 
                        "Invalid input",
                        "Error",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }
            
            change = n - orders.getTotal();
            
            for (MainCourse mc: orders.getMainCourses()) 
                receipt += "\n" + mc.getQuantity() +  " "+ mc.getName()  + "\t" + mc.getPrice() ;
            
            for (Appitizer ap: orders.getAppitizers())
                receipt += "\n" + ap.getQuantity() + " " + ap.getName() + "\t" + ap.getPrice();
            
            for (Dessert ds: orders.getDesserts())
                receipt += "\n" + ds.getQuantity() + " " +  ds.getName()  + "\t" + ds.getPrice();
            
            for (Drink dr: orders.getDrinks()) 
                receipt += "\n" + dr.getQuantity() + " " + dr.getName() + " "+ dr.getVariant()+ " - " + dr.getSize() +"oz" + "\t" + dr.getPrice();
            
            receipt += """
                       
                       =======================================
                       Total: PHP""" + orders.getTotal() +
                        "\nPayment: PHP" + n +
                        "\nChange: PHP" + change;
        } else {
            receipt += """
                       --NO ORDER--
                       =======================================""";
        }
        
        String time =   this.hours.getSelectedItem().toString() +":"+
                        this.minutes.getSelectedItem().toString() +" "+
                        this.timing.getSelectedItem().toString();
        
        
        DatabaseManager.addReservation(
                customer,
                receipt,
                this.additionalDetails.getText(),
                Integer.parseInt(this.amountGuest.getText()),
                formatter.format(this.date.getDate()),
                time,
                n
        );
        
        this.renderReservation();

        this.cardPages.removeAll();
        this.cardPages.add(reservationPanel);
        this.cardPages.revalidate();
        this.cardPages.repaint();
    }//GEN-LAST:event_applyReservationbtnActionPerformed

    private void cancelbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtn1ActionPerformed
        this.orders.removeAll();
        
        DefaultTableModel model = (DefaultTableModel) this.tableOrderDetail.getModel();
        model.setRowCount(0);
        
        this.datetext.setText("");
        this.timetext.setText("");
        this.amountGuest.setText("");
        this.detailstext.setText("");
        
        this.guestAmount.setText("");
        this.date.setDate(null);
        this.hours.setSelectedIndex(0);
        this.minutes.setSelectedIndex(0);
        this.timing.setSelectedIndex(0);
        this.additionalDetails.setText("");
        
        this.cardPages.removeAll();
        this.cardPages.add(welcome);
        this.cardPages.revalidate();
        this.cardPages.repaint();
    }//GEN-LAST:event_cancelbtn1ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String dateString = this.finalDate.getText().replace("Date: ", "");
        String timeString = this.finaltime.getText().replace("Time: ", "");

        System.out.println(dateString);
        System.out.println(timeString);

        // Define the formatters
        DateTimeFormatter dFormatter = DateTimeFormatter.ofPattern("MMM d, yyyy");
        DateTimeFormatter tFormatter = DateTimeFormatter.ofPattern("h:mm a");

        // Parse the date and time
        LocalDate now = LocalDate.now();
        LocalDate date = LocalDate.parse(dateString, dFormatter);
        LocalTime time = LocalTime.parse(timeString, tFormatter);

        if (now.isEqual(date)  && time.isBefore(LocalTime.now().plusMinutes(20))) {
            JOptionPane.showMessageDialog(this, "Sorry, you cannot cancel a reservation less than 20 minutes from now", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (now.isEqual(date) && LocalTime.now().isAfter(time)) {
            JOptionPane.showMessageDialog(
                this, 
                "Sorry, you cannot cancel a reservation that has already passed" +
                "\nPlease contact the restaurant for further assistance.", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel your reservation?", "Confirmation", JOptionPane.YES_NO_OPTION);

        if (dialogResult != JOptionPane.YES_OPTION) {
            return;
        }

        if (this.payment > 0) {
            JOptionPane.showMessageDialog(this, "You have successfully cancelled your reservation.\nYour payment of PHP" + this.payment + " will be refunded to you.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "You have successfully cancelled your reservation.", "Success", JOptionPane.INFORMATION_MESSAGE);
        }

        DatabaseManager.deleteReservation(customer);

        this.cardPages.removeAll();
        this.cardPages.add(welcome);
        this.cardPages.revalidate();
        this.cardPages.repaint();

    }//GEN-LAST:event_jButton13ActionPerformed
    
    private void renderReservation() {
        ArrayList<Object> reservation = DatabaseManager.getReservation(customer);
        
        this.recieptArea.setText(reservation.get(0).toString());
        this.finaldetails.setText(reservation.get(1).toString());
        this.finalamount.setText("Your additional details: "+reservation.get(2).toString());
        this.finalDate.setText("Date: " +reservation.get(3).toString());
        this.finaltime.setText("Time: " +reservation.get(4).toString());
        this.reservationNumber.setText(reservation.get(5).toString());
        this.payment = Double.parseDouble(reservation.get(6).toString());
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea additionalDetails;
    private javax.swing.JTextField amountGuest;
    private javax.swing.JButton apbtn;
    private javax.swing.JScrollPane appetizersMenu;
    private javax.swing.JButton applyReservationbtn;
    private javax.swing.JButton burgerbtn;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JButton cancelbtn1;
    private javax.swing.JButton carbonarabtn;
    private javax.swing.JPanel cardPages;
    private javax.swing.JButton changeorderbtn;
    private javax.swing.JButton chocobtn;
    private javax.swing.JButton coffeebtn;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField datetext;
    private javax.swing.JScrollPane dessertMenu;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JTextArea detailstext;
    private javax.swing.JButton drbtn;
    private javax.swing.JScrollPane drinksMenu;
    private javax.swing.JButton dsbtn;
    private javax.swing.JLabel finalDate;
    private javax.swing.JLabel finalamount;
    private javax.swing.JTextArea finaldetails;
    private javax.swing.JLabel finaltime;
    private javax.swing.JButton friesbtn;
    private javax.swing.JLabel greet;
    private javax.swing.JTextField guestAmount;
    private javax.swing.JComboBox<String> hours;
    private javax.swing.JButton icedTeabtn;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton knotsbtn;
    private javax.swing.JButton lemonadebtn;
    private javax.swing.JPanel listcard;
    private javax.swing.JScrollPane maincoursesMenu;
    private javax.swing.JPanel makeReservationPanel;
    private javax.swing.JButton makeReservationbtn;
    private javax.swing.JButton makeReservationbtn2;
    private javax.swing.JButton mcbtn;
    private javax.swing.JPanel menucards;
    private javax.swing.JButton milkshakebtn;
    private javax.swing.JComboBox<String> minutes;
    private javax.swing.JButton mozzarellabtn;
    private javax.swing.JButton nachosbtn;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JButton orderWings;
    private javax.swing.JButton orderbtn;
    private javax.swing.JPanel orderlistPanel;
    private javax.swing.JButton ordersbtn;
    private javax.swing.JButton parmesantbn;
    private javax.swing.JTextArea recieptArea;
    private javax.swing.JLabel reservationNumber;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JButton resetpreoredrbtn;
    private javax.swing.JButton salmonbtn;
    private javax.swing.JButton setpreorderbtn;
    private javax.swing.JButton slidersbtn;
    private javax.swing.JButton stakebtn;
    private javax.swing.JTable tableOrderDetail;
    private javax.swing.JButton tempurabtn;
    private javax.swing.JTextField timetext;
    private javax.swing.JComboBox<String> timing;
    private javax.swing.JLabel total;
    private javax.swing.JPanel welcome;
    // End of variables declaration//GEN-END:variables
}
